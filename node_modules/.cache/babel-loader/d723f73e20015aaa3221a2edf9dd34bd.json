{"ast":null,"code":"const fetch = require(\"node-fetch\");\n\nexport async function fetchLineData(apiURL) {\n  try {\n    const crimeDataResponse = await fetch(apiURL); // \"http://localhost:9000/\"\n\n    if (!crimeDataResponse.ok) {\n      throw new Error(\"There was no data returned by the API\");\n    } else {\n      const crimeData = await crimeDataResponse.json();\n      return crimeData;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}","map":{"version":3,"sources":["/Users/varungupta/tfl/src/services/fetch-line-data/fetchLineData.tsx"],"names":["fetch","require","fetchLineData","apiURL","crimeDataResponse","ok","Error","crimeData","json","e","console","error"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,OAAO,eAAeC,aAAf,CACLC,MADK,EAEwB;AAC7B,MAAI;AACF,UAAMC,iBAAiB,GAAG,MAAMJ,KAAK,CAACG,MAAD,CAArC,CADE,CAEF;;AACA,QAAI,CAACC,iBAAiB,CAACC,EAAvB,EAA2B;AACzB,YAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD,KAFD,MAEO;AACL,YAAMC,SAAiB,GAAG,MAAMH,iBAAiB,CAACI,IAAlB,EAAhC;AACA,aAAOD,SAAP;AACD;AACF,GATD,CASE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF","sourcesContent":["const fetch = require(\"node-fetch\");\n\nexport async function fetchLineData(\n  apiURL: string\n): Promise<Line[] | undefined> {\n  try {\n    const crimeDataResponse = await fetch(apiURL);\n    // \"http://localhost:9000/\"\n    if (!crimeDataResponse.ok) {\n      throw new Error(\"There was no data returned by the API\");\n    } else {\n      const crimeData: Line[] = await crimeDataResponse.json();\n      return crimeData;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\ninterface Line {\n  $type: String;\n  id: String;\n  name: String;\n  modeName: String;\n  disruptions: String[];\n  created: String;\n  modified: String;\n  lineStatuses: LineStatus[];\n  routeSections: String[];\n  serviceTypes: ServiceType[];\n  crowding: Crowding;\n}\n\ninterface LineStatus {\n  $type: String;\n  id: number;\n  statusSeverity: number;\n  statusSeverityDescription: String;\n  reason: String;\n  created: String;\n  validityPeriods: ValidityPeriod[];\n  disruption: Disruption;\n}\n\ninterface Disruption {\n  $type: String;\n  category: String;\n  categoryDescription: String;\n  description: String;\n  affectedRoutes: String[];\n  affectedStops: String[];\n  closureText: String;\n}\n\ninterface ValidityPeriod {\n  $type: String;\n  fromDate: String;\n  toDate: String;\n  isNow: Boolean;\n}\n\ninterface ServiceType {\n  $type: String;\n  name: String;\n  uri: String;\n}\n\ninterface Crowding {\n  $type: String;\n}\n"]},"metadata":{},"sourceType":"module"}