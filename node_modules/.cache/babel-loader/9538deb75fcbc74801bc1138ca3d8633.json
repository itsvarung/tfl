{"ast":null,"code":"var _jsxFileName = \"/Users/varungupta/tfl/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TrainLinesTable from \"./components/table\";\nimport { fetchLineData } from \"./helper-functions/fetchLineData\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lines: []\n    };\n  }\n\n  async setLineData() {\n    try {\n      const lineData = await fetchLineData();\n\n      if (lineData !== undefined) {\n        this.setState({\n          lines: lineData\n        });\n      } else {\n        this.setState({\n          lines: []\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async componentDidMount() {\n    this.setLineData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(TrainLinesTable, {\n      lineData: this.state.lines,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/varungupta/tfl/src/App.tsx"],"names":["React","Component","TrainLinesTable","fetchLineData","App","constructor","props","state","lines","setLineData","lineData","undefined","setState","e","console","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AAMA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA6C;AAClDI,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED,QAAMC,WAAN,GAAoB;AAClB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,aAAa,EAApC;;AACA,UAAIO,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAEE;AADK,SAAd;AAGD,OAJD,MAIO;AACL,aAAKE,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KAXD,CAWE,OAAOK,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AAED,QAAMG,iBAAN,GAA0B;AACxB,SAAKP,WAAL;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnCiD;AAsCpD,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TrainLinesTable from \"./components/table\";\nimport { fetchLineData } from \"./helper-functions/fetchLineData\";\n\ntype trainLines = {\n  lines: Line[];\n};\n\nexport class App extends Component<any, trainLines> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      lines: []\n    };\n  }\n\n  async setLineData() {\n    try {\n      const lineData = await fetchLineData();\n      if (lineData !== undefined) {\n        this.setState({\n          lines: lineData\n        });\n      } else {\n        this.setState({\n          lines: []\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async componentDidMount() {\n    this.setLineData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TrainLinesTable lineData={this.state.lines} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\ninterface Line {\n  $type: String;\n  id: String;\n  name: String;\n  modeName: String;\n  disruptions: String[];\n  created: String;\n  modified: String;\n  lineStatuses: LineStatus[];\n  routeSections: String[];\n  serviceTypes: ServiceType[];\n  crowding: Crowding;\n}\n\ninterface LineStatus {\n  $type: String;\n  id: number;\n  statusSeverity: number;\n  statusSeverityDescription: String;\n  reason: String;\n  created: String;\n  validityPeriods: ValidityPeriod[];\n  disruption: Disruption;\n}\n\ninterface Disruption {\n  $type: String;\n  category: String;\n  categoryDescription: String;\n  description: String;\n  affectedRoutes: String[];\n  affectedStops: String[];\n  closureText: String;\n}\n\ninterface ValidityPeriod {\n  $type: String;\n  fromDate: String;\n  toDate: String;\n  isNow: Boolean;\n}\n\ninterface ServiceType {\n  $type: String;\n  name: String;\n  uri: String;\n}\n\ninterface Crowding {\n  $type: String;\n}\n"]},"metadata":{},"sourceType":"module"}