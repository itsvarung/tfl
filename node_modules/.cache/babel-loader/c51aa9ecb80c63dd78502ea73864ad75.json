{"ast":null,"code":"export async function fetchLineData() {\n  try {\n    // const url = `https://api.tfl.gov.uk/line/mode/tube/status`;\n    const crimeDataResponse = await fetch(\"http://localhost:9000/test\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (!crimeDataResponse.ok) {\n      throw new Error(\"There was no data returned by the API\");\n    } else {\n      console.info(JSON.parse(crimeDataResponse));\n      const crimeData = await crimeDataResponse.json();\n      alert(crimeData.length);\n      return crimeData;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}","map":{"version":3,"sources":["/Users/varungupta/Documents/tfl/src/helper-functions/fetchLineData.tsx"],"names":["fetchLineData","crimeDataResponse","fetch","method","headers","ok","Error","console","info","JSON","parse","crimeData","json","alert","length","e","error"],"mappings":"AAoDA,OAAO,eAAeA,aAAf,GAA4D;AACjE,MAAI;AACF;AACA,UAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AAClEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFyD,KAA/B,CAArC;;AAOA,QAAI,CAACH,iBAAiB,CAACI,EAAvB,EAA2B;AACzB,YAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWT,iBAAX,CAAb;AACA,YAAMU,SAAiB,GAAG,MAAMV,iBAAiB,CAACW,IAAlB,EAAhC;AACAC,MAAAA,KAAK,CAACF,SAAS,CAACG,MAAX,CAAL;AAEA,aAAOH,SAAP;AACD;AACF,GAlBD,CAkBE,OAAOI,CAAP,EAAU;AACVR,IAAAA,OAAO,CAACS,KAAR,CAAcD,CAAd;AACD;AACF","sourcesContent":["interface Line {\n  $type: String;\n  id: String;\n  name: String;\n  modeName: String;\n  disruptions: String[];\n  created: String;\n  modified: String;\n  lineStatuses: LineStatus[];\n  routeSections: String[];\n  serviceTypes: ServiceType[];\n  crowding: Crowding;\n}\n\ninterface LineStatus {\n  $type: String;\n  id: number;\n  statusSeverity: number;\n  statusSeverityDescription: String;\n  reason: String;\n  created: String;\n  validityPeriods: ValidityPeriod[];\n  disruption: Disruption;\n}\n\ninterface Disruption {\n  $type: String;\n  category: String;\n  categoryDescription: String;\n  description: String;\n  affectedRoutes: String[];\n  affectedStops: String[];\n  closureText: String;\n}\n\ninterface ValidityPeriod {\n  $type: String;\n  fromDate: String;\n  toDate: String;\n  isNow: Boolean;\n}\n\ninterface ServiceType {\n  $type: String;\n  name: String;\n  uri: String;\n}\n\ninterface Crowding {\n  $type: String;\n}\n\nexport async function fetchLineData(): Promise<Line[] | undefined> {\n  try {\n    // const url = `https://api.tfl.gov.uk/line/mode/tube/status`;\n    const crimeDataResponse = await fetch(\"http://localhost:9000/test\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (!crimeDataResponse.ok) {\n      throw new Error(\"There was no data returned by the API\");\n    } else {\n      console.info(JSON.parse(crimeDataResponse));\n      const crimeData: Line[] = await crimeDataResponse.json();\n      alert(crimeData.length);\n\n      return crimeData;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}