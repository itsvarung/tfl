{"ast":null,"code":"var _jsxFileName = \"/Users/varungupta/tfl/src/components/table/index.tsx\";\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport LineTableRow from \"./tableRow\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nconst TrainLinesTable = props => {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    \"data-testid\": \"grid-container-spacing-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    \"data-testid\": \"grid-item-xs-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    \"data-testid\": \"grid-item-xs-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    \"data-testid\": \"table-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"table\",\n    \"data-testid\": \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    \"data-testid\": \"table-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    \"data-testid\": \"table-head-line-cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Line\"), React.createElement(TableCell, {\n    align: \"right\",\n    \"data-testid\": \"table-head-status-cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Status\"), React.createElement(TableCell, {\n    align: \"right\",\n    \"data-testid\": \"table-head-severity-cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Status Severity\"), React.createElement(TableCell, {\n    align: \"right\",\n    \"data-testid\": \"table-head-reason-cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Status Reason\"))), React.createElement(TableBody, {\n    \"data-testid\": \"table-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.lineData.map((line, index) => React.createElement(LineTableRow, {\n    index: index,\n    line: line,\n    \"data-testid\": \"line-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))))))));\n};\n\nexport default TrainLinesTable;","map":{"version":3,"sources":["/Users/varungupta/tfl/src/components/table/index.tsx"],"names":["React","makeStyles","createStyles","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LineTableRow","useStyles","theme","root","flexGrow","table","minWidth","TrainLinesTable","props","classes","lineData","map","line","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,YAAzB;AAMA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,IAC3BV,YAAY,CAAC;AACXW,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADK;AAIXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AAJI,CAAD,CADc,CAA5B;;AAWA,MAAMC,eAAgC,GAAGC,KAAK,IAAI;AAChD,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,mBAAY,0BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,mBAAY,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,mBAAY,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,mBAAY,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEM,OAAO,CAACJ,KADrB;AAEE,kBAAW,OAFb;AAGE,mBAAY,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,SAAD;AAAW,mBAAY,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,mBAAY,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,mBAAY,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,mBAAY,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAaE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,mBAAY,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbF,CADF,CANF,EA2BE,oBAAC,SAAD;AAAW,mBAAY,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAClB,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,mBAAY,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CA3BF,CADF,CADF,CAFF,CADF,CADF;AAgDD,CAnDD;;AAqDA,eAAeL,eAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport LineTableRow from \"./tableRow\";\n\nexport interface Props {\n  lineData: Line[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    table: {\n      minWidth: 650\n    }\n  })\n);\n\nconst TrainLinesTable: React.FC<Props> = props => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3} data-testid=\"grid-container-spacing-3\">\n        <Grid item xs={2} data-testid=\"grid-item-xs-2\"></Grid>\n        <Grid item xs={8} data-testid=\"grid-item-xs-8\">\n          <TableContainer data-testid=\"table-container\">\n            <Table\n              className={classes.table}\n              aria-label=\"table\"\n              data-testid=\"table\"\n            >\n              {/* Table Header */}\n              <TableHead data-testid=\"table-head\">\n                <TableRow>\n                  <TableCell align=\"right\" data-testid=\"table-head-line-cell\">\n                    Line\n                  </TableCell>\n                  <TableCell align=\"right\" data-testid=\"table-head-status-cell\">\n                    Status\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    data-testid=\"table-head-severity-cell\"\n                  >\n                    Status Severity\n                  </TableCell>\n                  <TableCell align=\"right\" data-testid=\"table-head-reason-cell\">\n                    Status Reason\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n\n              {/* Table Cells */}\n              <TableBody data-testid=\"table-body\">\n                {props.lineData.map((line, index) => (\n                  <LineTableRow\n                    index={index}\n                    line={line}\n                    data-testid=\"line-row\"\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TrainLinesTable;\n\ninterface Line {\n  $type: String;\n  id: String;\n  name: String;\n  modeName: String;\n  disruptions: String[];\n  created: String;\n  modified: String;\n  lineStatuses: LineStatus[];\n  routeSections: String[];\n  serviceTypes: ServiceType[];\n  crowding: Crowding;\n}\n\ninterface LineStatus {\n  $type: String;\n  id: number;\n  statusSeverity: number;\n  statusSeverityDescription: String;\n  reason: String;\n  created: String;\n  validityPeriods: ValidityPeriod[];\n  disruption: Disruption;\n}\n\ninterface Disruption {\n  $type: String;\n  category: String;\n  categoryDescription: String;\n  description: String;\n  affectedRoutes: String[];\n  affectedStops: String[];\n  closureText: String;\n}\n\ninterface ValidityPeriod {\n  $type: String;\n  fromDate: String;\n  toDate: String;\n  isNow: Boolean;\n}\n\ninterface ServiceType {\n  $type: String;\n  name: String;\n  uri: String;\n}\n\ninterface Crowding {\n  $type: String;\n}\n"]},"metadata":{},"sourceType":"module"}